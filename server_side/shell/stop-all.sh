#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ OKTARION NGG
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(date)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./stop-all.sh [–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã...]
# –ü—Ä–∏–º–µ—Ä—ã: 
#   ./stop-all.sh                    # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
#   ./stop-all.sh contact event      # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ contact –∏ event
#   ./stop-all.sh all                # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
#   ./stop-all.sh tools              # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

set -e

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
AVAILABLE_SERVICES=("contact" "conversation" "message" "task" "event" "tools")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ OKTARION NGG"
    echo "=================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã...]"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã:"
    for service in "${AVAILABLE_SERVICES[@]}"; do
        echo "  ‚Ä¢ $service"
    done
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                    # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ"
    echo "  $0 contact event      # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ contact –∏ event"
    echo "  $0 all                # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã"
    echo "  $0 tools              # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    show_help
    exit 0
fi

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
if [ $# -eq 0 ]; then
    # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
    SERVICES_TO_STOP=("${AVAILABLE_SERVICES[@]}")
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ OKTARION NGG..."
else
    SERVICES_TO_STOP=()
    for arg in "$@"; do
        if [[ "$arg" == "all" ]]; then
            SERVICES_TO_STOP=("${AVAILABLE_SERVICES[@]}")
            break
        elif [[ " ${AVAILABLE_SERVICES[*]} " =~ " $arg " ]]; then
            SERVICES_TO_STOP+=("$arg")
        else
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $arg"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: ${AVAILABLE_SERVICES[*]}"
            exit 1
        fi
    done
fi

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: ${SERVICES_TO_STOP[*]}"
echo "=========================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã docker-compose
if docker compose version &> /dev/null; then
    COMPOSE_CMD="docker compose"
else
    COMPOSE_CMD="docker-compose"
fi

log "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: $COMPOSE_CMD"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞
stop_service() {
    local service=$1
    local service_name=""
    local service_dir=""
    
    case $service in
        "contact")
            service_name="Contact"
            service_dir="$(dirname "$0")/../business_micros/contact_micro"
            ;;
        "conversation")
            service_name="Conversation"
            service_dir="$(dirname "$0")/../business_micros/conversation_micro"
            ;;
        "message")
            service_name="Message"
            service_dir="$(dirname "$0")/../business_micros/message_micro"
            ;;
        "task")
            service_name="Task"
            service_dir="$(dirname "$0")/../business_micros/task_micro"
            ;;
        "event")
            service_name="Event"
            service_dir="$(dirname "$0")/../business_micros/event_micro"
            ;;
        "tools")
            service_name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
            service_dir="$(dirname "$0")/../tools"
            ;;
    esac
    
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ $service_name..."
    cd "$service_dir"
    $COMPOSE_CMD down
    
    if [ $? -eq 0 ]; then
        success "$service_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warning "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ $service_name"
    fi
    
    # –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    cd - > /dev/null
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
for service in "${SERVICES_TO_STOP[@]}"; do
    stop_service "$service"
done

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–µ–π (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# log "–£–¥–∞–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å–µ—Ç–µ–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..."
# docker network rm oktarion_events_net oktarion_tasks_net oktarion_messages_net oktarion_conversations_net oktarion_contacts_net
# success "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–µ—Ç–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ —É–¥–∞–ª–µ–Ω—ã"
# 
# log "–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å–µ—Ç–∏ oktarion_ngg..."
# docker network rm oktarion_ngg
# success "–û–±—â–∞—è —Å–µ—Ç—å oktarion_ngg —É–¥–∞–ª–µ–Ω–∞"

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
echo "====================="
docker ps --filter "network=oktarion_ngg" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ —Å–µ—Ç–∏ oktarion_ngg"

success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! ‚úÖ"
