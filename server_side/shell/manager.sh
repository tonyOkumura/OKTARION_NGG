#!/bin/bash

# –ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è OKTARION NGG
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(date)

set -e

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
AVAILABLE_SERVICES=("contact" "conversation" "message" "task" "event" "tools")

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞
clear_screen() {
    clear
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear_screen
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë${NC}                    ${WHITE}OKTARION NGG MANAGER${NC}                    ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${NC}              ${CYAN}–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏${NC}              ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
show_main_menu() {
    show_header
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo ""
    echo -e "${GREEN}1.${NC} üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "${RED}2.${NC} üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "${YELLOW}3.${NC} üî® –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "${BLUE}4.${NC} üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo -e "${CYAN}5.${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "${PURPLE}6.${NC} üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
    echo -e "${RED}7.${NC} üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "${WHITE}8.${NC} ‚ùå –í—ã—Ö–æ–¥"
    echo ""
    echo -n -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (1-8): ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
select_services() {
    local action_name=$1
    local selected_services=()
    
    show_header
    echo -e "${WHITE}$action_name —Å–µ—Ä–≤–∏—Å—ã${NC}"
    echo ""
    echo -e "${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo ""
    
    for i in "${!AVAILABLE_SERVICES[@]}"; do
        local service="${AVAILABLE_SERVICES[$i]}"
        local service_name=""
        
        case $service in
            "contact") service_name="Contact" ;;
            "conversation") service_name="Conversation" ;;
            "message") service_name="Message" ;;
            "task") service_name="Task" ;;
            "event") service_name="Event" ;;
            "tools") service_name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" ;;
        esac
        
        echo -e "${GREEN}$((i+1)).${NC} $service_name ($service)"
    done
    
    echo ""
    echo -e "${YELLOW}–í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞:${NC}"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1 3 5)"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'all' –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: ${NC}"
    
    read -r input
    
    if [[ "$input" == "back" ]]; then
        return 1
    elif [[ "$input" == "all" ]]; then
        selected_services=("${AVAILABLE_SERVICES[@]}")
    else
        # –ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–æ–≤
        for num in $input; do
            if [[ "$num" =~ ^[0-9]+$ ]] && [ "$num" -ge 1 ] && [ "$num" -le "${#AVAILABLE_SERVICES[@]}" ]; then
                local index=$((num-1))
                selected_services+=("${AVAILABLE_SERVICES[$index]}")
            else
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä: $num"
                return 1
            fi
        done
    fi
    
    if [ ${#selected_services[@]} -eq 0 ]; then
        error "–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"
        return 1
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    SELECTED_SERVICES=("${selected_services[@]}")
    
    echo ""
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω—ã —Å–µ—Ä–≤–∏—Å—ã: ${selected_services[*]}${NC}"
    echo ""
    echo -n -e "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ${NC}"
    read -r confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    if select_services "–ó–∞–ø—É—Å–∫"; then
        show_header
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤: ${SELECTED_SERVICES[*]}${NC}"
        echo ""
        
        # –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ start-all.sh —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
        ./start-all.sh "${SELECTED_SERVICES[@]}"
        
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_services() {
    if select_services "–û—Å—Ç–∞–Ω–æ–≤–∫–∞"; then
        show_header
        echo -e "${RED}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: ${SELECTED_SERVICES[*]}${NC}"
        echo ""
        
        # –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ stop-all.sh —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
        ./stop-all.sh "${SELECTED_SERVICES[@]}"
        
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
rebuild_services() {
    # –§–∏–ª—å—Ç—Ä—É–µ–º tools –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏
    local rebuildable_services=()
    for service in "${AVAILABLE_SERVICES[@]}"; do
        if [[ "$service" != "tools" ]]; then
            rebuildable_services+=("$service")
        fi
    done
    
    show_header
    echo -e "${YELLOW}üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤${NC}"
    echo ""
    echo -e "${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏:${NC}"
    echo ""
    
    for i in "${!rebuildable_services[@]}"; do
        local service="${rebuildable_services[$i]}"
        local service_name=""
        
        case $service in
            "contact") service_name="Contact" ;;
            "conversation") service_name="Conversation" ;;
            "message") service_name="Message" ;;
            "task") service_name="Task" ;;
            "event") service_name="Event" ;;
        esac
        
        echo -e "${GREEN}$((i+1)).${NC} $service_name ($service)"
    done
    
    echo ""
    echo -e "${YELLOW}–í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞:${NC}"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1 3 5)"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'all' –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: ${NC}"
    
    read -r input
    
    if [[ "$input" == "back" ]]; then
        return
    elif [[ "$input" == "all" ]]; then
        SELECTED_SERVICES=("${rebuildable_services[@]}")
    else
        local selected_services=()
        # –ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–æ–≤
        for num in $input; do
            if [[ "$num" =~ ^[0-9]+$ ]] && [ "$num" -ge 1 ] && [ "$num" -le "${#rebuildable_services[@]}" ]; then
                local index=$((num-1))
                selected_services+=("${rebuildable_services[$index]}")
            else
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä: $num"
                return
            fi
        done
        SELECTED_SERVICES=("${selected_services[@]}")
    fi
    
    if [ ${#SELECTED_SERVICES[@]} -eq 0 ]; then
        error "–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"
        return
    fi
    
    echo ""
    echo -e "${GREEN}–í—ã–±—Ä–∞–Ω—ã —Å–µ—Ä–≤–∏—Å—ã: ${SELECTED_SERVICES[*]}${NC}"
    echo ""
    echo -n -e "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ${NC}"
    read -r confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        show_header
        echo -e "${YELLOW}üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: ${SELECTED_SERVICES[*]}${NC}"
        echo ""
        
        # –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ rebuild-all.sh —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
        ./rebuild-all.sh "${SELECTED_SERVICES[@]}"
        
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
show_status() {
    show_header
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ OKTARION NGG${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
        return
    fi
    
    echo -e "${CYAN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Å–µ—Ç–∏ oktarion_ngg:${NC}"
    echo ""
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ —Å–µ—Ç–∏ oktarion_ngg
    docker ps --filter "network=oktarion_ngg" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" 2>/dev/null || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ —Å–µ—Ç–∏ oktarion_ngg"
    
    echo ""
    echo -e "${CYAN}–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Docker:${NC}"
    echo ""
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" 2>/dev/null || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    
    echo ""
    echo -e "${CYAN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    echo ""
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" 2>/dev/null || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    
    echo ""
    echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read -r
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞
show_logs() {
    show_header
    echo -e "${CYAN}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞${NC}"
    echo ""
    echo -e "${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo ""
    
    for i in "${!AVAILABLE_SERVICES[@]}"; do
        local service="${AVAILABLE_SERVICES[$i]}"
        local service_name=""
        
        case $service in
            "contact") service_name="Contact" ;;
            "conversation") service_name="Conversation" ;;
            "message") service_name="Message" ;;
            "task") service_name="Task" ;;
            "event") service_name="Event" ;;
            "tools") service_name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" ;;
        esac
        
        echo -e "${GREEN}$((i+1)).${NC} $service_name ($service)"
    done
    
    echo ""
    echo -e "${YELLOW}–í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞:${NC}"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: ${NC}"
    
    read -r input
    
    if [[ "$input" == "back" ]]; then
        return
    elif [[ "$input" =~ ^[0-9]+$ ]] && [ "$input" -ge 1 ] && [ "$input" -le "${#AVAILABLE_SERVICES[@]}" ]; then
        local index=$((input-1))
        local service="${AVAILABLE_SERVICES[$index]}"
        local service_name=""
        
        case $service in
            "contact") service_name="Contact" ;;
            "conversation") service_name="Conversation" ;;
            "message") service_name="Message" ;;
            "task") service_name="Task" ;;
            "event") service_name="Event" ;;
            "tools") service_name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" ;;
        esac
        
        show_header
        echo -e "${CYAN}üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: $service_name${NC}"
        echo ""
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        local container_name=""
        case $service in
            "contact") container_name="contact_micro" ;;
            "conversation") container_name="conversation_micro" ;;
            "message") container_name="message_micro" ;;
            "task") container_name="task_micro" ;;
            "event") container_name="event_micro" ;;
            "tools") container_name="hoppscotch" ;; # –ü—Ä–∏–º–µ—Ä –¥–ª—è tools
        esac
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
        echo -e "${YELLOW}–ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:${NC}"
        echo ""
        docker logs --tail 50 "$container_name" 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        
        echo ""
        echo -e "${YELLOW}–û–ø—Ü–∏–∏:${NC}"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'f' –¥–ª—è —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'all' –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –ª–æ–≥–æ–≤"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        echo ""
        echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ${NC}"
        
        read -r log_option
        
        case $log_option in
            "f")
                echo ""
                echo -e "${CYAN}–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –ª–æ–≥–∞–º–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
                docker logs -f "$container_name" 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                ;;
            "all")
                echo ""
                echo -e "${CYAN}–í—Å–µ –ª–æ–≥–∏:${NC}"
                docker logs "$container_name" 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                ;;
            "back")
                return
                ;;
        esac
        
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    else
        error "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞"
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
show_useful_commands() {
    show_header
    echo -e "${PURPLE}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã${NC}"
    echo ""
    
    echo -e "${CYAN}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:${NC}"
    echo -e "  ‚Ä¢ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${GREEN}./start-all.sh${NC}"
    echo -e "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${RED}./stop-all.sh${NC}"
    echo -e "  ‚Ä¢ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${YELLOW}./rebuild-all.sh${NC}"
    echo ""
    echo -e "  ‚Ä¢ –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${GREEN}./start-all.sh contact event${NC}"
    echo -e "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${RED}./stop-all.sh contact event${NC}"
    echo -e "  ‚Ä¢ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ${YELLOW}./rebuild-all.sh contact event${NC}"
    echo ""
    
    echo -e "${CYAN}Docker –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: ${BLUE}docker ps -a${NC}"
    echo -e "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BLUE}docker logs <container_name>${NC}"
    echo -e "  ‚Ä¢ –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –ª–æ–≥–∞–º–∏: ${BLUE}docker logs -f <container_name>${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É: ${BLUE}docker exec -it <container_name> /bin/bash${NC}"
    echo -e "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BLUE}docker stop <container_name>${NC}"
    echo -e "  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BLUE}docker rm <container_name>${NC}"
    echo ""
    
    echo -e "${CYAN}–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Contact DB: ${BLUE}docker exec -it contact_postgres psql -U contactuser -d contactdb${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Conversation DB: ${BLUE}docker exec -it conversation_postgres psql -U conversationuser -d conversationdb${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Message DB: ${BLUE}docker exec -it message_postgres psql -U messageuser -d messagedb${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Task DB: ${BLUE}docker exec -it task_postgres psql -U taskuser -d taskdb${NC}"
    echo -e "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Event DB: ${BLUE}docker exec -it event_postgres psql -U eventuser -d eventdb${NC}"
    echo ""
    
    echo -e "${CYAN}–°–µ—Ç–∏ Docker:${NC}"
    echo -e "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–µ—Ç–µ–π: ${BLUE}docker network ls${NC}"
    echo -e "  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–∏: ${BLUE}docker network rm <network_name>${NC}"
    echo ""
    
    echo -e "${CYAN}–û—á–∏—Å—Ç–∫–∞:${NC}"
    echo -e "  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤: ${BLUE}docker image prune${NC}"
    echo -e "  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: ${BLUE}docker container prune${NC}"
    echo -e "  ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π: ${BLUE}docker network prune${NC}"
    echo -e "  ‚Ä¢ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: ${BLUE}docker system prune -a${NC}"
    echo ""
    
    echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read -r
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã
cleanup_system() {
    show_header
    echo -e "${RED}üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã${NC}"
    echo ""
    echo -e "${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –æ—á–∏—Å—Ç–∫–∏:${NC}"
    echo ""
    echo -e "${GREEN}1.${NC} üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo -e "${GREEN}2.${NC} üñºÔ∏è  –û–±—Ä–∞–∑—ã"
    echo -e "${GREEN}3.${NC} üíæ Volumes"
    echo -e "${GREEN}4.${NC} üåê –°–µ—Ç–∏"
    echo -e "${GREEN}5.${NC} üî® Build –∫—ç—à–∏"
    echo -e "${RED}6.${NC} üí• –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞"
    echo -e "${YELLOW}7.${NC} üîô –ù–∞–∑–∞–¥"
    echo ""
    echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—á–∏—Å—Ç–∫–∏ (1-7): ${NC}"
    
    read -r cleanup_choice
    
    case $cleanup_choice in
        1)
            cleanup_type="containers"
            ;;
        2)
            cleanup_type="images"
            ;;
        3)
            cleanup_type="volumes"
            ;;
        4)
            cleanup_type="networks"
            ;;
        5)
            cleanup_type="builds"
            ;;
        6)
            cleanup_type="all"
            ;;
        7)
            return
            ;;
        *)
            show_header
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7."
            echo ""
            echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read -r
            return
            ;;
    esac
    
    # –í—ã–±–æ—Ä —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    if [[ "$cleanup_type" != "builds" ]]; then
        show_header
        echo -e "${RED}üßπ –û—á–∏—Å—Ç–∫–∞ $cleanup_type${NC}"
        echo ""
        echo -e "${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
        echo ""
        
        for i in "${!AVAILABLE_SERVICES[@]}"; do
            local service="${AVAILABLE_SERVICES[$i]}"
            local service_name=""
            
            case $service in
                "contact") service_name="Contact" ;;
                "conversation") service_name="Conversation" ;;
                "message") service_name="Message" ;;
                "task") service_name="Task" ;;
                "event") service_name="Event" ;;
                "tools") service_name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" ;;
            esac
            
            echo -e "${GREEN}$((i+1)).${NC} $service_name ($service)"
        done
        
        echo ""
        echo -e "${YELLOW}–í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞:${NC}"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1 3 5)"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'all' –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo -e "  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        echo ""
        echo -n -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: ${NC}"
        
        read -r input
        
        if [[ "$input" == "back" ]]; then
            return
        elif [[ "$input" == "all" ]]; then
            SELECTED_SERVICES=("${AVAILABLE_SERVICES[@]}")
        else
            local selected_services=()
            # –ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–æ–≤
            for num in $input; do
                if [[ "$num" =~ ^[0-9]+$ ]] && [ "$num" -ge 1 ] && [ "$num" -le "${#AVAILABLE_SERVICES[@]}" ]; then
                    local index=$((num-1))
                    selected_services+=("${AVAILABLE_SERVICES[$index]}")
                else
                    error "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä: $num"
                    echo ""
                    echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
                    read -r
                    return
                fi
            done
            SELECTED_SERVICES=("${selected_services[@]}")
        fi
        
        if [ ${#SELECTED_SERVICES[@]} -eq 0 ]; then
            error "–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"
            echo ""
            echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read -r
            return
        fi
        
        echo ""
        echo -e "${GREEN}–í—ã–±—Ä–∞–Ω—ã —Å–µ—Ä–≤–∏—Å—ã: ${SELECTED_SERVICES[*]}${NC}"
    else
        SELECTED_SERVICES=()
    fi
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    echo ""
    echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º–∞!${NC}"
    echo ""
    echo -n -e "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—á–∏—Å—Ç–∫—É? (y/n): ${NC}"
    read -r confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        show_header
        echo -e "${RED}üßπ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ $cleanup_type...${NC}"
        echo ""
        
        # –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ cleanup.sh
        if [ ${#SELECTED_SERVICES[@]} -gt 0 ]; then
            ./cleanup.sh "$cleanup_type" "${SELECTED_SERVICES[@]}"
        else
            ./cleanup.sh "$cleanup_type"
        fi
        
        echo ""
        echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
        read -r
    fi
}

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
main() {
    while true; do
        show_main_menu
        read -r choice
        
        case $choice in
            1)
                start_services
                ;;
            2)
                stop_services
                ;;
            3)
                rebuild_services
                ;;
            4)
                show_status
                ;;
            5)
                show_logs
                ;;
            6)
                show_useful_commands
                ;;
            7)
                cleanup_system
                ;;
            8)
                show_header
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                echo ""
                echo -e "${CYAN}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ OKTARION NGG Manager!${NC}"
                echo ""
                exit 0
                ;;
            *)
                show_header
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 8."
                echo ""
                echo -n -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
                read -r
                ;;
        esac
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
check_scripts() {
    local missing_scripts=()
    
    if [ ! -f "./start-all.sh" ]; then
        missing_scripts+=("start-all.sh")
    fi
    
    if [ ! -f "./stop-all.sh" ]; then
        missing_scripts+=("stop-all.sh")
    fi
    
    if [ ! -f "./rebuild-all.sh" ]; then
        missing_scripts+=("rebuild-all.sh")
    fi
    
    if [ ! -f "./cleanup.sh" ]; then
        missing_scripts+=("cleanup.sh")
    fi
    
    if [ ${#missing_scripts[@]} -gt 0 ]; then
        error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã: ${missing_scripts[*]}"
        echo ""
        echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, —á—Ç–æ –∏ manager.sh${NC}"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
check_permissions() {
    local scripts=("start-all.sh" "stop-all.sh" "rebuild-all.sh" "cleanup.sh")
    
    for script in "${scripts[@]}"; do
        if [ ! -x "$script" ]; then
            warning "–°–∫—Ä–∏–ø—Ç $script –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–∞–≤–∞..."
            chmod +x "$script"
        fi
    done
}

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_scripts
    check_permissions
    
    # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    main
fi
