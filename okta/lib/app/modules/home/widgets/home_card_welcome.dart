import 'package:flutter/material.dart';
import 'package:get/get.dart';

import '../../../../shared/widgets/widgets.dart';
import '../../../../core/models/contact_model.dart';
import '../../../../core/models/update_profile_request.dart';
import '../controllers/home_controller.dart';
import 'home_common_widgets.dart';

/// –ö–∞—Ä—Ç–æ—á–∫–∞ "–û —Å–µ–±–µ"
class HomeCardWelcome extends GetView<HomeController> {
  const HomeCardWelcome({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final cs = theme.colorScheme;
    
    return Obx(() => Stack(
      children: [
        HomeCard(
          title: '–û —Å–µ–±–µ',
          icon: Icons.person_outline,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              Row(
                children: [
                  Icon(
                    Icons.person_outline,
                    size: 18,
                    color: cs.onSurfaceVariant,
                  ),
                  const SizedBox(width: 12),
                  Text(
                    '–ò–º—è:',
                    style: theme.textTheme.bodyMedium?.copyWith(
                      color: cs.onSurfaceVariant,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  const SizedBox(width: 8),
                  Expanded(
                    child: Text(
                      controller.userName.value ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                      style: theme.textTheme.bodyMedium?.copyWith(
                        fontWeight: FontWeight.w600,
                      ),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                ],
              ),
              const SizedBox(height: 12),
              
              // –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
              Row(
                children: [
                  Icon(
                    Icons.circle,
                    size: 18,
                    color: Colors.green,
                  ),
                  const SizedBox(width: 12),
                  Text(
                    '–°—Ç–∞—Ç—É—Å:',
                    style: theme.textTheme.bodyMedium?.copyWith(
                      color: cs.onSurfaceVariant,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  const SizedBox(width: 8),
                  Expanded(
                    child: Text(
                      '–ê–∫—Ç–∏–≤–µ–Ω',
                      style: theme.textTheme.bodyMedium?.copyWith(
                        fontWeight: FontWeight.w600,
                        color: Colors.green,
                      ),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                ],
              ),
              const SizedBox(height: 16),
              
              // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              InfoRow(
                icon: Icons.email_outlined,
                label: 'Email',
                value: controller.userEmail.value ?? 'user@example.com',
              ),
              const SizedBox(height: 12),
              
              InfoRow(
                icon: Icons.phone_outlined,
                label: '–¢–µ–ª–µ—Ñ–æ–Ω',
                value: controller.userPhone.value ?? '+7 (999) 123-45-67',
              ),
              const SizedBox(height: 12),
              
              InfoRow(
                icon: Icons.work_outline,
                label: '–î–æ–ª–∂–Ω–æ—Å—Ç—å',
                value: controller.userPosition.value ?? 'Developer',
              ),
              const SizedBox(height: 12),
              
              InfoRow(
                icon: Icons.business_outlined,
                label: '–û—Ç–¥–µ–ª',
                value: controller.userDepartment.value ?? '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
              ),
              const SizedBox(height: 12),
              
              InfoRow(
                icon: Icons.business,
                label: '–ö–æ–º–ø–∞–Ω–∏—è',
                value: controller.userCompany.value ?? 'OKTARION',
              ),
              const SizedBox(height: 16),
              
              // –°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏–µ
              StatusContainer(
                icon: Icons.message_outlined,
                title: '–°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                message: controller.userStatusMessage.value ?? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã',
                backgroundColor: cs.surfaceContainerHighest.withValues(alpha: 0.5),
                borderColor: cs.outline.withValues(alpha: 0.2),
              ),
            ],
          ),
        ),
        // –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ "–ò–∑–º–µ–Ω–∏—Ç—å"
        Positioned(
          bottom: 16,
          right: 16,
          child: GlassIconButton(
            icon: Icons.edit_outlined,
            onPressed: () => _showEditDialog(context),
            tooltip: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
          ),
        ),
      ],
    ));
  }

  void _showEditDialog(BuildContext context) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    final userContact = Contact(
      id: 'current-user',
      username: controller.userUsername.value ?? 'user',
      firstName: controller.userFirstName.value,
      lastName: controller.userLastName.value,
      displayName: controller.userName.value,
      email: controller.userEmail.value,
      phone: controller.userPhone.value,
      isOnline: true,
      lastSeenAt: DateTime.now(),
      statusMessage: controller.userStatusMessage.value,
      role: 'user',
      department: controller.userDepartment.value,
      rank: controller.userRank.value,
      position: controller.userPosition.value,
      company: controller.userCompany.value,
      avatarUrl: controller.userAvatarUrl.value,
      dateOfBirth: null,
      locale: 'ru',
      timezone: 'Europe/Moscow',
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    );

    Get.dialog(
      ContactEditingDialog(
        contact: userContact,
        onSave: (updatedContact) async {
          try {
            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
            final request = UpdateProfileRequest(
              username: updatedContact.username,
              firstName: updatedContact.firstName,
              lastName: updatedContact.lastName,
              displayName: updatedContact.displayName,
              email: updatedContact.email,
              phone: updatedContact.phone,
              statusMessage: updatedContact.statusMessage,
              department: updatedContact.department,
              rank: updatedContact.rank,
              position: updatedContact.position,
              company: updatedContact.company,
            );

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —á–µ—Ä–µ–∑ API
            final success = await controller.updateProfile(request);
            if (success) {
              Get.snackbar(
                '–£—Å–ø–µ—Ö',
                '–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω',
                snackPosition: SnackPosition.BOTTOM,
                backgroundColor: Get.theme.colorScheme.primary.withValues(alpha: 0.1),
                colorText: Get.theme.colorScheme.primary,
              );
            } else {
              Get.snackbar(
                '–û—à–∏–±–∫–∞',
                '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å',
                snackPosition: SnackPosition.BOTTOM,
                backgroundColor: Get.theme.colorScheme.error.withValues(alpha: 0.1),
                colorText: Get.theme.colorScheme.error,
              );
            }
          } catch (e) {
            Get.snackbar(
              '–û—à–∏–±–∫–∞',
              '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è',
              snackPosition: SnackPosition.BOTTOM,
              backgroundColor: Get.theme.colorScheme.error.withValues(alpha: 0.1),
              colorText: Get.theme.colorScheme.error,
            );
          }
        },
      ),
    );
  }
}
